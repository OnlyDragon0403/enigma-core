
#![crate_name = "enigmacoreenclave"]
#![crate_type = "staticlib"]

#![cfg_attr(not(target_env = "sgx"), no_std)]
#![cfg_attr(target_env = "sgx", feature(rustc_private))]
#![cfg_attr(not(feature = "std"), feature(alloc))]
#![feature(slice_concat_ext)]


#[cfg(not(target_env = "sgx"))]
#[macro_use]
extern crate sgx_tstd as std;
#[macro_use]
extern crate sgx_tunittest;
extern crate sgx_types;
extern crate sgx_tse;
extern crate sgx_trts;
// sealing
extern crate sgx_tseal;
extern crate sgx_rand;


#[macro_use]
extern crate lazy_static;

extern crate sputnikvm;
extern crate hexutil;
extern crate bigint;
extern crate sputnikvm_network_classic;
extern crate enigma_tools_t;

extern crate ring;


#[macro_use]
extern crate error_chain;
extern crate rustc_hex as hex;
extern crate ethabi;
extern crate rlp;
mod evm_t;
mod ocalls_t;

use sgx_types::*;

use std::ptr;
use std::str::from_utf8;
use std::slice;
use hexutil::read_hex;
use evm_t::evm::call_sputnikvm;
use enigma_tools_t::cryptography_t;
use enigma_tools_t::common;
use enigma_tools_t::cryptography_t::asymmetric;
use enigma_tools_t::common::utils_t::{ToHex};
use enigma_tools_t::quote_t;
use evm_t::abi::{prepare_evm_input, create_callback};
use evm_t::EvmResult;
use std::vec::Vec;
use common::errors_t::EnclaveError;


lazy_static! { pub static ref SIGNINING_KEY: asymmetric::KeyPair = get_sealed_keys_wrapper(); }


#[no_mangle]
pub extern "C" fn ecall_get_registration_quote( target_info: &sgx_target_info_t , real_report: &mut sgx_report_t) -> sgx_status_t {
    println!("Generating Report with: {:?}", SIGNINING_KEY.get_pubkey()[..].to_hex());
    quote_t::create_report_with_data(&target_info ,real_report,&SIGNINING_KEY.get_pubkey())
}

fn get_sealed_keys_wrapper() -> asymmetric::KeyPair {
    // Get Home path via Ocall
    let mut path_buf = ocalls_t::get_home_path();
    // add the filename to the path: `keypair.sealed`
    path_buf.push("keypair.sealed");
    let sealed_path = path_buf.to_str().unwrap();

    // TODO: Decide what to do if failed to obtain keys.
    match cryptography_t::get_sealed_keys(&sealed_path) {
        Ok(key) => return key,
        Err(err) => panic!("Failed obtaining keys: {:?}", err)
    };
}

#[no_mangle]
pub extern "C" fn ecall_get_signing_pubkey(pubkey: &mut [u8; 64]) {
    pubkey.clone_from_slice(&SIGNINING_KEY.get_pubkey());
}

#[no_mangle]
pub extern "C" fn ecall_evm(bytecode: *const u8, bytecode_len: usize,
                            callable: *const u8, callable_len: usize,
                            callable_args: *const u8, callable_args_len: usize,
                            preprocessor: *const u8, preprocessor_len: usize,
                            callback: *const u8, callback_len: usize,
                            output: *mut u8, signature: &mut [u8; 64], result_len: &mut usize) -> sgx_status_t {

    let bytecode_slice = unsafe { slice::from_raw_parts(bytecode, bytecode_len) };
    let callable_slice = unsafe { slice::from_raw_parts(callable, callable_len) };
    let callable_args_slice = unsafe { slice::from_raw_parts(callable_args, callable_args_len) };
    let preprocessor_slice = unsafe { slice::from_raw_parts(preprocessor, preprocessor_len) };
    let callback_slice = unsafe { slice::from_raw_parts(callback, callback_len) };


    let callable_args = read_hex(from_utf8(callable_args_slice).unwrap()).unwrap();
    let bytecode = read_hex(from_utf8(bytecode_slice).unwrap()).unwrap();

    let data = match  prepare_evm_input(callable_slice, &callable_args, preprocessor_slice){
        Ok(v) => {
            v
        },
        Err(_e) => {
            return sgx_status_t::SGX_ERROR_UNEXPECTED
        },
    };

    let mut res = call_sputnikvm(&bytecode, data);
    let mut out_signature = Vec::<u8>::new();
    if callback_slice.len() > 0 {
        out_signature = match sign(callable_args_slice, callback_slice, bytecode_slice, &mut res.1) {
            Ok(v) => v,
            Err(_e) => return sgx_status_t::SGX_ERROR_UNEXPECTED,
        };
        signature.clone_from_slice(&out_signature[0..64]);
    }

    match res.0{
        0 => {
            let s: &mut [u8] = &mut res.1[..];
            *result_len = s.len();
            unsafe {
                ptr::copy_nonoverlapping(s.as_ptr(), output, s.len());
            }
            sgx_status_t::SGX_SUCCESS

        }
        _ => sgx_status_t::SGX_ERROR_UNEXPECTED
    }
}

fn sign(callable_args: &[u8], callback: &[u8], bytecode: &[u8], result: & mut Vec<u8>) -> Result<Vec<u8>, EnclaveError>{
    let callback_data = match create_callback(result, callback){
        Ok(v) => v,
        Err(e) => return Err(e),
    };
    let mut to_be_signed: Vec<u8> = vec![];
    to_be_signed.extend_from_slice(callable_args);
    to_be_signed.extend_from_slice(&callback_data);
    to_be_signed.extend_from_slice(bytecode);
    SIGNINING_KEY.sign(&to_be_signed)
}

pub mod tests {
    extern crate sgx_tunittest;
    extern crate sgx_tstd as std;
    extern crate enigma_tools_t;

    use sgx_tunittest::*;
    use core::iter::FromIterator;
    use std::vec::Vec;
    use std::string::{String, ToString};
    use enigma_tools_t::common::utils_t::{FromHex, ToHex, Keccak256};
    use enigma_tools_t::cryptography_t::asymmetric::tests::*;
    use enigma_tools_t::cryptography_t::asymmetric;
    use enigma_tools_t::cryptography_t::symmetric::tests::*;
    use enigma_tools_t::storage_t::tests::*;
    use super::ecall_evm;
    use super::SIGNINING_KEY;

    #[no_mangle]
    pub extern "C" fn ecall_run_tests() {
        rsgx_unit_tests!(
        test_full_sealing_storage,
        test_signing,
        test_ecdh,
        test_rand_encrypt_decrypt,
        test_encryption,
        test_decryption,
        test_ecall_evm_signning
        );
    }


    fn test_ecall_evm_signning() {
//        let bytecode = "6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303988f84146100ca57806310f11e84146101705780632aaf281b1461026c5780633b833245146102fa57806357f5fc28146103415780636db0c8f0146103f7578063850d861914610493578063a06a5856146104b9578063b24fd5c514610520578063d10e1e6914610577578063daefe7381461060f578063dd20866e14610681578063ed0b494c1461075d575b600080fd5b3480156100d657600080fd5b506100f560048036038101908080359060200190929190505050610832565b604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188600019166000191681526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b34801561017c57600080fd5b506101856108a9565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156101d05780820151818401526020810190506101b5565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156102125780820151818401526020810190506101f7565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610254578082015181840152602081019050610239565b50505050905001965050505050505060405180910390f35b6102d6600480360381019080803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610adf565b604051808260018111156102e657fe5b60ff16815260200191505060405180910390f35b34801561030657600080fd5b5061032b600480360381019080803563ffffffff169060200190929190505050610faa565b6040518082815260200191505060405180910390f35b34801561034d57600080fd5b5061037c600480360381019080803563ffffffff16906020019092919080359060200190929190505050610fdd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103bc5780820151818401526020810190506103a1565b50505050905090810190601f1680156103e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561040357600080fd5b5061047d60048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803560001916906020019092919080359060200190929190803590602001909291905050506110bd565b6040518082815260200191505060405180910390f35b6104b7600480360381019080803563ffffffff169060200190929190505050611130565b005b3480156104c557600080fd5b506104fc60048036038101908080356000191690602001909291908035906020019092919080359060200190929190505050611254565b6040518082600181111561050c57fe5b60ff16815260200191505060405180910390f35b34801561052c57600080fd5b506105356115ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058357600080fd5b506105eb600480360381019080803563ffffffff169060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506115d2565b604051808260018111156105fb57fe5b60ff16815260200191505060405180910390f35b34801561061b57600080fd5b50610640600480360381019080803563ffffffff1690602001909291905050506118ac565b604051808760001916600019168152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b34801561068d57600080fd5b506106ff600480360381019080803563ffffffff16906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001909291905050506119d8565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561074857808201518184015260208101905061072d565b50505050905001935050505060405180910390f35b34801561076957600080fd5b5061081c6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080356000191690602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611b75565b6040518082815260200191505060405180910390f35b60018181548110151561084157fe5b90600052602060002090600b02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600301549080600401549080600501549080600601549080600701549080600a0154905088565b60608060608060608060006001805490506040519080825280602002602001820160405280156108e85781602001602082028038833980820191505090505b50935060018054905060405190808252806020026020018201604052801561091f5781602001602082028038833980820191505090505b5092506001805490506040519080825280602002602001820160405280156109565781602001602082028038833980820191505090505b509150600090505b600180549050811015610acd5760018181548110151561097a57fe5b90600052602060002090600b0201600a0154848281518110151561099a57fe5b906020019060200201818152505060006001828154811015156109b957fe5b90600052602060002090600b020160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a2d5760018382815181101515610a1e57fe5b90602001906020020181815250505b3373ffffffffffffffffffffffffffffffffffffffff16600182815481101515610a5357fe5b90600052602060002090600b020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ac05760018282815181101515610ab157fe5b90602001906020020181815250505b808060010191505061095e565b83838396509650965050505050909192565b600080600034111515610b5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4465706f7369742076616c7565206d75737420626520706f7369746976652e0081525060200191505060405180910390fd5b600060018563ffffffff16815481101515610b7157fe5b90600052602060002090600b0201600a0154141515610bf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496c6c6567616c20737461746520666f72206465706f736974732e000000000081525060200191505060405180910390fd5b60018463ffffffff16815481101515610c0d57fe5b90600052602060002090600b020190506000816006015434811515610c2e57fe5b06141515610cca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f4465706f7369742076616c7565206d7573742062652061206d756c7469706c6581526020017f206f6620636c61696d2076616c7565000000000000000000000000000000000081525060400191505060405180910390fd5b60008160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610da9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e6e6f74206465706f73697420747769636520776974682074686520736181526020017f6d6520616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b348160030160008282540192505081905550348160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082816008018260040154815481101515610e1757fe5b906000526020600020019080519060200190610e34929190611cbd565b50600181600401600082825401925050819055508363ffffffff163373ffffffffffffffffffffffffffffffffffffffff167fce7036acc3606aaa1ec3a2e7b4d13b3f4da34ee1eac298fc47524074de74a3bf8534600160405180806020018481526020018315151515815260200180602001838103835286818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b50838103825260088152602001807f616c6c20676f6f640000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a380600701548160040154101515610f9f57600181600a01819055508363ffffffff167fa98c11bc69afe22b520fe800f82e421f9594d4f06259a7600711b75af05a43b960405160405180910390a25b600091505092915050565b600060018263ffffffff16815481101515610fc157fe5b90600052602060002090600b0201600801805490509050919050565b606060018363ffffffff16815481101515610ff457fe5b90600052602060002090600b02016008018281548110151561101257fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110b05780601f10611085576101008083540402835291602001916110b0565b820191906000526020600020905b81548152906001019060200180831161109357829003601f168201915b5050505050905092915050565b60008385848151811015156110ce57fe5b90602001906020020190600019169081600019168152505082806001019350506110f782611c14565b858481518110151561110557fe5b9060200190602002019060001916908160001916815250508280600101935050829050949350505050565b600060608060018463ffffffff1681548110151561114a57fe5b90600052602060002090600b02019250604080519080825280601f01601f19166020018201604052801561118d5781602001602082028038833980820191505090505b50915060016040519080825280602002602001820160405280156111c05781602001602082028038833980820191505090505b5090507f72616e64282900000000000000000000000000000000000000000000000000008160008151811015156111f357fe5b9060200190602002019060001916908160001916815250508363ffffffff167fb37f76c8ba24e6a6d20d203681329001f2cacd9ab37c09d8b2aee57b8a31b8746001604051808215151515815260200191505060405180910390a250505050565b6000806001805490509050600180548091906001016112739190611d3d565b503360018263ffffffff1681548110151561128a57fe5b90600052602060002090600b020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460018263ffffffff168154811015156112ef57fe5b90600052602060002090600b02016001018160001916905550600060018263ffffffff1681548110151561131f57fe5b90600052602060002090600b020160030181905550600060018263ffffffff1681548110151561134b57fe5b90600052602060002090600b0201600401819055504260018263ffffffff1681548110151561137657fe5b90600052602060002090600b0201600501819055508360018263ffffffff168154811015156113a157fe5b90600052602060002090600b0201600601819055508260018263ffffffff168154811015156113cc57fe5b90600052602060002090600b0201600701819055508260405190808252806020026020018201604052801561141557816020015b60608152602001906001900390816114005790505b5060018263ffffffff1681548110151561142b57fe5b90600052602060002090600b0201600801908051906020019061144f929190611d6f565b508260405190808252806020026020018201604052801561147f5781602001602082028038833980820191505090505b5060018263ffffffff1681548110151561149557fe5b90600052602060002090600b020160090190805190602001906114b9929190611dcf565b50600060018263ffffffff168154811015156114d157fe5b90600052602060002090600b0201600a01819055508063ffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c2ac5e09d37c38a96fb20791b6ed6f2ccaaaf26c4115680b9257504d32bcdc34288888860016040518086815260200185600019166000191681526020018481526020018381526020018215151515815260200180602001828103825260088152602001807f616c6c20676f6f64000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a360009150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806001808563ffffffff168154811015156115eb57fe5b90600052602060002090600b0201600a0154141515611672576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4465616c206973206e6f742065786563757465642e000000000000000000000081525060200191505060405180910390fd5b8260018563ffffffff1681548110151561168857fe5b90600052602060002090600b020160090190805190602001906116ac929190611dcf565b50600090505b60018463ffffffff168154811015156116c757fe5b90600052602060002090600b0201600901805490508110156117ba5760018463ffffffff168154811015156116f857fe5b90600052602060002090600b02016009018181548110151561171657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60018663ffffffff1681548110151561176f57fe5b90600052602060002090600b0201600601549081150290604051600060405180830381858888f193505050501580156117ac573d6000803e3d6000fd5b5080806001019150506116b2565b8363ffffffff167f61347ea145bc2f7f5814e4a2b5e70991c5c42870bfd4df70ab8ea10c41cfa89d60018663ffffffff168154811015156117f757fe5b90600052602060002090600b02016006015460018763ffffffff1681548110151561181e57fe5b90600052602060002090600b0201600901805490506001604051808481526020018363ffffffff1663ffffffff1681526020018215151515815260200180602001828103825260088152602001807f616c6c20676f6f6400000000000000000000000000000000000000000000000081525060200194505050505060405180910390a2600091505092915050565b60008060008060008060008060008060008060018d63ffffffff168154811015156118d357fe5b90600052602060002090600b020160010154955060018d63ffffffff168154811015156118fc57fe5b90600052602060002090600b020160070154945060018d63ffffffff1681548110151561192557fe5b90600052602060002090600b020160060154935060018d63ffffffff1681548110151561194e57fe5b90600052602060002090600b020160040154925060018d63ffffffff1681548110151561197757fe5b90600052602060002090600b020160030154915060018d63ffffffff168154811015156119a057fe5b90600052602060002090600b02016009018054905090508585858585859b509b509b509b509b509b5050505050505091939550919395565b600060606000806000865192505b6000831115611b5b57826001870160405180828152602001915050604051809103902060019004811515611a1657fe5b0691508660018403815181101515611a2a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff168783815181101515611a5857fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141515611b4d578660018403815181101515611a9057fe5b9060200190602002015190508682815181101515611aaa57fe5b906020019060200201518760018503815181101515611ac557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808783815181101515611b1057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8280600190039350506119e6565b87878163ffffffff16915094509450505050935093915050565b600080848685815181101515611b8757fe5b9060200190602002019060001916908160001916815250508380600101945050600090505b8251811015611c08578281815181101515611bc357fe5b906020019060200201518685815181101515611bdb57fe5b90602001906020020190600019169081600019168152505083806001019450508080600101915050611bac565b83915050949350505050565b600080821415611c46577f30000000000000000000000000000000000000000000000000000000000000009050611cb5565b5b6000821115611cb4576101008160019004811515611c6157fe5b0460010290507f01000000000000000000000000000000000000000000000000000000000000006030600a84811515611c9657fe5b06010260010281179050600a82811515611cac57fe5b049150611c47565b5b809050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611cfe57805160ff1916838001178555611d2c565b82800160010185558215611d2c579182015b82811115611d2b578251825591602001919060010190611d10565b5b509050611d399190611e59565b5090565b815481835581811115611d6a57600b0281600b028360005260206000209182019101611d699190611e7e565b5b505050565b828054828255906000526020600020908101928215611dbe579160200282015b82811115611dbd578251829080519060200190611dad929190611f1c565b5091602001919060010190611d8f565b5b509050611dcb9190611f9c565b5090565b828054828255906000526020600020908101928215611e48579160200282015b82811115611e475782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611def565b5b509050611e559190611fc8565b5090565b611e7b91905b80821115611e77576000816000905550600101611e5f565b5090565b90565b611f1991905b80821115611f1557600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560038201600090556004820160009055600582016000905560068201600090556007820160009055600882016000611ef4919061200b565b600982016000611f04919061202c565b600a82016000905550600b01611e84565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f5d57805160ff1916838001178555611f8b565b82800160010185558215611f8b579182015b82811115611f8a578251825591602001919060010190611f6f565b5b509050611f989190611e59565b5090565b611fc591905b80821115611fc15760008181611fb8919061204d565b50600101611fa2565b5090565b90565b61200891905b8082111561200457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611fce565b5090565b90565b50805460008255906000526020600020908101906120299190611f9c565b50565b508054600082559060005260206000209081019061204a9190611e59565b50565b50805460018160011615610100020316600290046000825580601f106120735750612092565b601f0160209004906000526020600020908101906120919190611e59565b5b505600a165627a7a7230582086e1f5e5b37aedfb481f34a341e24d4b61f6f4477cd1cb8db59712ac3771ccc50029".to_string();
//        let callable = "mixAddresses(uint32,address[],uint)".to_string();
//        let callable_args = "f9011932f90114b88831336431326537323439323462626230383930366434333239633063663138343062663239373562306339313963656238643530653830333463383066303437663261303438623264323034666363643664333061346439396137653239386166386235303837326639663039633464303030313032303330343035303630373038303930613062b8883631383732663762346432316238653361393533383534326363306166356430353966366330356130666565396165666638373239623231313838316633343466326139346662366137303038306233663233343764623337643265323631623161636533633331393863613565616330303031303230333034303530363037303830393061306231".to_string();
//        let callback = "".to_string();
        let bytecode_hex = "6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303988f84146100ca57806310f11e84146101705780632aaf281b1461026c5780633b833245146102fa57806357f5fc28146103415780636db0c8f0146103f7578063850d861914610493578063a06a5856146104b9578063b24fd5c514610520578063d10e1e6914610577578063daefe7381461060f578063dd20866e14610681578063ed0b494c1461075d575b600080fd5b3480156100d657600080fd5b506100f560048036038101908080359060200190929190505050610832565b604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188600019166000191681526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b34801561017c57600080fd5b506101856108a9565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156101d05780820151818401526020810190506101b5565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156102125780820151818401526020810190506101f7565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610254578082015181840152602081019050610239565b50505050905001965050505050505060405180910390f35b6102d6600480360381019080803563ffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610adf565b604051808260018111156102e657fe5b60ff16815260200191505060405180910390f35b34801561030657600080fd5b5061032b600480360381019080803563ffffffff169060200190929190505050610faa565b6040518082815260200191505060405180910390f35b34801561034d57600080fd5b5061037c600480360381019080803563ffffffff16906020019092919080359060200190929190505050610fdd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103bc5780820151818401526020810190506103a1565b50505050905090810190601f1680156103e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561040357600080fd5b5061047d60048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803560001916906020019092919080359060200190929190803590602001909291905050506110bd565b6040518082815260200191505060405180910390f35b6104b7600480360381019080803563ffffffff169060200190929190505050611130565b005b3480156104c557600080fd5b506104fc60048036038101908080356000191690602001909291908035906020019092919080359060200190929190505050611254565b6040518082600181111561050c57fe5b60ff16815260200191505060405180910390f35b34801561052c57600080fd5b506105356115ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058357600080fd5b506105eb600480360381019080803563ffffffff169060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506115d2565b604051808260018111156105fb57fe5b60ff16815260200191505060405180910390f35b34801561061b57600080fd5b50610640600480360381019080803563ffffffff1690602001909291905050506118ac565b604051808760001916600019168152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b34801561068d57600080fd5b506106ff600480360381019080803563ffffffff16906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001909291905050506119d8565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561074857808201518184015260208101905061072d565b50505050905001935050505060405180910390f35b34801561076957600080fd5b5061081c6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080356000191690602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611b75565b6040518082815260200191505060405180910390f35b60018181548110151561084157fe5b90600052602060002090600b02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600301549080600401549080600501549080600601549080600701549080600a0154905088565b60608060608060608060006001805490506040519080825280602002602001820160405280156108e85781602001602082028038833980820191505090505b50935060018054905060405190808252806020026020018201604052801561091f5781602001602082028038833980820191505090505b5092506001805490506040519080825280602002602001820160405280156109565781602001602082028038833980820191505090505b509150600090505b600180549050811015610acd5760018181548110151561097a57fe5b90600052602060002090600b0201600a0154848281518110151561099a57fe5b906020019060200201818152505060006001828154811015156109b957fe5b90600052602060002090600b020160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a2d5760018382815181101515610a1e57fe5b90602001906020020181815250505b3373ffffffffffffffffffffffffffffffffffffffff16600182815481101515610a5357fe5b90600052602060002090600b020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ac05760018282815181101515610ab157fe5b90602001906020020181815250505b808060010191505061095e565b83838396509650965050505050909192565b600080600034111515610b5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4465706f7369742076616c7565206d75737420626520706f7369746976652e0081525060200191505060405180910390fd5b600060018563ffffffff16815481101515610b7157fe5b90600052602060002090600b0201600a0154141515610bf8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496c6c6567616c20737461746520666f72206465706f736974732e000000000081525060200191505060405180910390fd5b60018463ffffffff16815481101515610c0d57fe5b90600052602060002090600b020190506000816006015434811515610c2e57fe5b06141515610cca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f4465706f7369742076616c7565206d7573742062652061206d756c7469706c6581526020017f206f6620636c61696d2076616c7565000000000000000000000000000000000081525060400191505060405180910390fd5b60008160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610da9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e6e6f74206465706f73697420747769636520776974682074686520736181526020017f6d6520616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b348160030160008282540192505081905550348160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082816008018260040154815481101515610e1757fe5b906000526020600020019080519060200190610e34929190611cbd565b50600181600401600082825401925050819055508363ffffffff163373ffffffffffffffffffffffffffffffffffffffff167fce7036acc3606aaa1ec3a2e7b4d13b3f4da34ee1eac298fc47524074de74a3bf8534600160405180806020018481526020018315151515815260200180602001838103835286818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b50838103825260088152602001807f616c6c20676f6f640000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a380600701548160040154101515610f9f57600181600a01819055508363ffffffff167fa98c11bc69afe22b520fe800f82e421f9594d4f06259a7600711b75af05a43b960405160405180910390a25b600091505092915050565b600060018263ffffffff16815481101515610fc157fe5b90600052602060002090600b0201600801805490509050919050565b606060018363ffffffff16815481101515610ff457fe5b90600052602060002090600b02016008018281548110151561101257fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110b05780601f10611085576101008083540402835291602001916110b0565b820191906000526020600020905b81548152906001019060200180831161109357829003601f168201915b5050505050905092915050565b60008385848151811015156110ce57fe5b90602001906020020190600019169081600019168152505082806001019350506110f782611c14565b858481518110151561110557fe5b9060200190602002019060001916908160001916815250508280600101935050829050949350505050565b600060608060018463ffffffff1681548110151561114a57fe5b90600052602060002090600b02019250604080519080825280601f01601f19166020018201604052801561118d5781602001602082028038833980820191505090505b50915060016040519080825280602002602001820160405280156111c05781602001602082028038833980820191505090505b5090507f72616e64282900000000000000000000000000000000000000000000000000008160008151811015156111f357fe5b9060200190602002019060001916908160001916815250508363ffffffff167fb37f76c8ba24e6a6d20d203681329001f2cacd9ab37c09d8b2aee57b8a31b8746001604051808215151515815260200191505060405180910390a250505050565b6000806001805490509050600180548091906001016112739190611d3d565b503360018263ffffffff1681548110151561128a57fe5b90600052602060002090600b020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460018263ffffffff168154811015156112ef57fe5b90600052602060002090600b02016001018160001916905550600060018263ffffffff1681548110151561131f57fe5b90600052602060002090600b020160030181905550600060018263ffffffff1681548110151561134b57fe5b90600052602060002090600b0201600401819055504260018263ffffffff1681548110151561137657fe5b90600052602060002090600b0201600501819055508360018263ffffffff168154811015156113a157fe5b90600052602060002090600b0201600601819055508260018263ffffffff168154811015156113cc57fe5b90600052602060002090600b0201600701819055508260405190808252806020026020018201604052801561141557816020015b60608152602001906001900390816114005790505b5060018263ffffffff1681548110151561142b57fe5b90600052602060002090600b0201600801908051906020019061144f929190611d6f565b508260405190808252806020026020018201604052801561147f5781602001602082028038833980820191505090505b5060018263ffffffff1681548110151561149557fe5b90600052602060002090600b020160090190805190602001906114b9929190611dcf565b50600060018263ffffffff168154811015156114d157fe5b90600052602060002090600b0201600a01819055508063ffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c2ac5e09d37c38a96fb20791b6ed6f2ccaaaf26c4115680b9257504d32bcdc34288888860016040518086815260200185600019166000191681526020018481526020018381526020018215151515815260200180602001828103825260088152602001807f616c6c20676f6f64000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a360009150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806001808563ffffffff168154811015156115eb57fe5b90600052602060002090600b0201600a0154141515611672576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4465616c206973206e6f742065786563757465642e000000000000000000000081525060200191505060405180910390fd5b8260018563ffffffff1681548110151561168857fe5b90600052602060002090600b020160090190805190602001906116ac929190611dcf565b50600090505b60018463ffffffff168154811015156116c757fe5b90600052602060002090600b0201600901805490508110156117ba5760018463ffffffff168154811015156116f857fe5b90600052602060002090600b02016009018181548110151561171657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60018663ffffffff1681548110151561176f57fe5b90600052602060002090600b0201600601549081150290604051600060405180830381858888f193505050501580156117ac573d6000803e3d6000fd5b5080806001019150506116b2565b8363ffffffff167f61347ea145bc2f7f5814e4a2b5e70991c5c42870bfd4df70ab8ea10c41cfa89d60018663ffffffff168154811015156117f757fe5b90600052602060002090600b02016006015460018763ffffffff1681548110151561181e57fe5b90600052602060002090600b0201600901805490506001604051808481526020018363ffffffff1663ffffffff1681526020018215151515815260200180602001828103825260088152602001807f616c6c20676f6f6400000000000000000000000000000000000000000000000081525060200194505050505060405180910390a2600091505092915050565b60008060008060008060008060008060008060018d63ffffffff168154811015156118d357fe5b90600052602060002090600b020160010154955060018d63ffffffff168154811015156118fc57fe5b90600052602060002090600b020160070154945060018d63ffffffff1681548110151561192557fe5b90600052602060002090600b020160060154935060018d63ffffffff1681548110151561194e57fe5b90600052602060002090600b020160040154925060018d63ffffffff1681548110151561197757fe5b90600052602060002090600b020160030154915060018d63ffffffff168154811015156119a057fe5b90600052602060002090600b02016009018054905090508585858585859b509b509b509b509b509b5050505050505091939550919395565b600060606000806000865192505b6000831115611b5b57826001870160405180828152602001915050604051809103902060019004811515611a1657fe5b0691508660018403815181101515611a2a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff168783815181101515611a5857fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141515611b4d578660018403815181101515611a9057fe5b9060200190602002015190508682815181101515611aaa57fe5b906020019060200201518760018503815181101515611ac557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808783815181101515611b1057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8280600190039350506119e6565b87878163ffffffff16915094509450505050935093915050565b600080848685815181101515611b8757fe5b9060200190602002019060001916908160001916815250508380600101945050600090505b8251811015611c08578281815181101515611bc357fe5b906020019060200201518685815181101515611bdb57fe5b90602001906020020190600019169081600019168152505083806001019450508080600101915050611bac565b83915050949350505050565b600080821415611c46577f30000000000000000000000000000000000000000000000000000000000000009050611cb5565b5b6000821115611cb4576101008160019004811515611c6157fe5b0460010290507f01000000000000000000000000000000000000000000000000000000000000006030600a84811515611c9657fe5b06010260010281179050600a82811515611cac57fe5b049150611c47565b5b809050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611cfe57805160ff1916838001178555611d2c565b82800160010185558215611d2c579182015b82811115611d2b578251825591602001919060010190611d10565b5b509050611d399190611e59565b5090565b815481835581811115611d6a57600b0281600b028360005260206000209182019101611d699190611e7e565b5b505050565b828054828255906000526020600020908101928215611dbe579160200282015b82811115611dbd578251829080519060200190611dad929190611f1c565b5091602001919060010190611d8f565b5b509050611dcb9190611f9c565b5090565b828054828255906000526020600020908101928215611e48579160200282015b82811115611e475782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611def565b5b509050611e559190611fc8565b5090565b611e7b91905b80821115611e77576000816000905550600101611e5f565b5090565b90565b611f1991905b80821115611f1557600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560038201600090556004820160009055600582016000905560068201600090556007820160009055600882016000611ef4919061200b565b600982016000611f04919061202c565b600a82016000905550600b01611e84565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f5d57805160ff1916838001178555611f8b565b82800160010185558215611f8b579182015b82811115611f8a578251825591602001919060010190611f6f565b5b509050611f989190611e59565b5090565b611fc591905b80821115611fc15760008181611fb8919061204d565b50600101611fa2565b5090565b90565b61200891905b8082111561200457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611fce565b5090565b90565b50805460008255906000526020600020908101906120299190611f9c565b50565b508054600082559060005260206000209081019061204a9190611e59565b50565b50805460018160011615610100020316600290046000825580601f106120735750612092565b601f0160209004906000526020600020908101906120919190611e59565b5b505600a165627a7a723058202d10329a1b92b33c681b855090dc7b653a0178872a7e3ec0d89a26c6dfa227290029".from_hex().unwrap();
        let callable = "mixAddresses(uint,address[],uint)".to_string();
        let callable_args_hex = "f9015c80f90158b8aa3031646436386239366330613337303466303036653431393432356163613962636464633537303465333539356332393735303031343733336266373536653936366465626335393561343466613666383361343065363232393263316262616636313061373933356538613034623333373064363437323837333764636132346463653866323064393935323339643836616630333463636633323631663937623831333762393732b8aa3031646436386239366330613337303466303036653431393432356163613962636464633537303465333539356332393735303031343733336266373536653936366465626335393561343466613666383361343065363232393263316262616636313061373933356538613034623333373064363437323837333764636132346463653866323064393935323339643836616630333463636633323631663937623831333762393732".from_hex().unwrap();
        let preprocessor = "".to_string();
        let callback = "distribute(uint32,address[])".to_string();
        let mut st: u8 = 1;
        let mut result_length: usize = 0;
//
//        let mut out = vec![0u8; 100000];
//        let slice = out.as_mut_slice();
//        let res = ecall_evm(
//            bytecode.as_ptr() as *const u8, bytecode.len(),
//            callable.as_ptr() as *const u8, callable.len(),
//            callable_args.as_ptr(), callable_args.len(),
//            callback.as_ptr(), callback.len(),
//            preprocessor.as_ptr(), preprocessor.len(),
//            slice.as_mut_ptr() as *mut u8,
//            &mut st,
//            &mut result_length);
//        let mut real_output = Vec::from_iter(slice[0..result_length].iter().cloned());
        println!("Testing Signing Process");
        let mut real_output_hex = "d10e1e690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000006330a553fc93768f612722bb8c2ec78ac90b3bbc0000000000000000000000005aeda56215b167893e80b4fe645ba6d5bab767de".to_string().from_hex().unwrap();
        // real_output, bytecode, callable_args
        let mut to_be_signed: Vec<u8> = Vec::new();
        to_be_signed.extend_from_slice(&callable_args_hex);
        to_be_signed.append(&mut real_output_hex);
        to_be_signed.extend_from_slice(&bytecode_hex);
        let _priv = "c87509a1c067bbde78beb793e6fa76530b6382a4c0241e5e4a9ec0a0f44dc0d3".to_string().from_hex().unwrap();
        let mut priv2 = [0u8; 32];
        priv2.clone_from_slice(_priv.as_slice());
        let keys = asymmetric::KeyPair::from_slice(&priv2).unwrap();
        println!("Ethereum Address: 0x{}", &keys.get_pubkey().keccak256().to_hex()[24..]);
        let sig = keys.sign(to_be_signed.as_slice()).unwrap();
        println!("Signed!, {:?}", &sig[..].to_hex());
        assert_eq!(to_be_signed.as_slice().keccak256().to_hex(), "9694d14920d88891db58c5a32067ac85a8c402b10892e8541a30864451b05523");
        assert_eq!(sig[..].to_hex(), "e0ef5e844025f4d80a523f4796f8e6ac837d22e3281692d0b5f1369e62b3e49607395c43ac4abe14a24feab265d96dcd04d5d82b92034ad112e7b141b7160ef41b");

    }

}
