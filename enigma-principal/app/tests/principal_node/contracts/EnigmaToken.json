{
  "contractName": "EnigmaToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2ff2e9dc"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604080518082018252600681527f456e69676d6100000000000000000000000000000000000000000000000000006020808301918252835180850190945260038085527f454e47000000000000000000000000000000000000000000000000000000000091850191909152825192939260089261008e92916101aa565b5081516100a29060049060208501906101aa565b506005805460ff191660ff92909216919091179055506100d490503366354a6ba7a180006401000000006100d9810204565b610245565b600160a060020a03821615156100ee57600080fd5b600254610108908264010000000061071b61019182021704565b600255600160a060020a03821660009081526020819052604090205461013b908264010000000061071b61019182021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a357600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101eb57805160ff1916838001178555610218565b82800160010185558215610218579182015b828111156102185782518255916020019190600101906101fd565b50610224929150610228565b5090565b61024291905b80821115610224576000815560010161022e565b90565b61087c806102546000396000f3fe6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820fed57578368a1a9a838ef5d3e7819975a90ee26782a4b2592ff2215252ae98160029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820fed57578368a1a9a838ef5d3e7819975a90ee26782a4b2592ff2215252ae98160029",
  "sourceMap": "660:1642:3:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;405:163;;;965:1:3;;493:12:10;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:10;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:10;:20;;-1:-1:-1;;541:20:10;;;;;;;;;;;;-1:-1:-1;978:33:3;;-1:-1:-1;984:10:3;753:17;978:5;;;;:33;:::i;:::-;660:1642;;6195:263:9;-1:-1:-1;;;;;6269:21:9;;;;6261:30;;;;;;6317:12;;:23;;6334:5;6317:16;;;;;;:23;:::i;:::-;6302:12;:38;-1:-1:-1;;;;;6371:18:9;;:9;:18;;;;;;;;;;;:29;;6394:5;6371:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6350:18:9;;:9;:18;;;;;;;;;;;:50;;;;6415:36;;;;;;;6350:18;;:9;;6415:36;;;;;;;;;;6195:263;;:::o;2761:145:8:-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:8:o;660:1642:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:3;;;-1:-1:-1;660:1642:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "660:1642:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2026:128:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:3;;;;;;;;;;;;;;;;;;;;;;;;;;;933:89:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:89:9;;;;;;;;;;;;;;;;;;;;1620:150:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1620:150:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:3;;;;;;;;;;;;;;;;;;712:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:58:3;;;;930:81:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:10;;;;;;;;;;;;;;;;;;;;;;;4230:317:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4230:317:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4230:317:9;;;;;;;;;1231:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1231:104:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:9;-1:-1:-1;;;;;1231:104:9;;;771:85:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:10;;;;5055:327:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5055:327:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5055:327:9;;;;;;;;;1200:120:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1200:120:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:3;;;;;;;;;2160:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:139:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:3;;;;;;;;;;;628:81:10;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:3:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:3:o;933:89:9:-;1003:12;;933:89;:::o;1620:150:3:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:3:o;712:58::-;753:17;712:58;:::o;930:81:10:-;995:9;;;;930:81;:::o;4230:317:9:-;4310:4;-1:-1:-1;;;;;4334:21:9;;;;4326:30;;;;;;4408:10;4399:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4399:29:9;;;;;;;;;;:45;;4433:10;4399:45;:33;:45;:::i;:::-;4376:10;4367:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4367:29:9;;;;;;;;;;;;:77;;;4459:60;;;;;;4367:29;;4459:60;;;;;;;;;;;-1:-1:-1;4536:4:9;4230:317;;;;:::o;1231:104::-;-1:-1:-1;;;;;1312:16:9;1286:7;1312:16;;;;;;;;;;;;1231:104::o;771:85:10:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5055:327:9;5140:4;-1:-1:-1;;;;;5164:21:9;;;;5156:30;;;;;;5238:10;5229:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5229:29:9;;;;;;;;;;:50;;5263:15;5229:50;:33;:50;:::i;1200:120:3:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2732:238:9:-;2797:4;-1:-1:-1;;;;;2821:21:9;;;;2813:30;;;;;;2863:10;2854:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2854:29:9;;;;;;;;;;;;:37;;;2906:36;;;;;;;2854:29;;2863:10;2906:36;;;;;;;;;;;-1:-1:-1;2959:4:9;2732:238;;;;:::o;3433:294::-;-1:-1:-1;;;;;3557:14:9;;3512:4;3557:14;;;:8;:14;;;;;;;;3572:10;3557:26;;;;;;;;:37;;3588:5;3557:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3528:14:9;;;;;;:8;:14;;;;;;;;3543:10;3528:26;;;;;;;:66;3604:26;3537:4;3620:2;3624:5;3604:9;:26::i;:::-;-1:-1:-1;;;;;3645:54:9;;3672:14;;;;:8;:14;;;;;;;;3660:10;3672:26;;;;;;;;;;;3645:54;;;;;;;3660:10;;3645:54;;;;;;;;;;;;-1:-1:-1;3716:4:9;3433:294;;;;;:::o;2761:145:8:-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;2278:145;2336:7;2363:6;;;;2355:15;;;;;;-1:-1:-1;2392:5:8;;;2278:145::o;1959:137:9:-;2020:4;2036:32;2046:10;2058:2;2062:5;2036:9;:32::i;:::-;-1:-1:-1;2085:4:9;1959:137;;;;:::o;1666:129::-;-1:-1:-1;;;;;1764:15:9;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;5596:256::-;-1:-1:-1;;;;;5683:16:9;;;;5675:25;;;;;;-1:-1:-1;;;;;5729:15:9;;:9;:15;;;;;;;;;;;:26;;5749:5;5729:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5711:15:9;;;:9;:15;;;;;;;;;;;:44;;;;5781:13;;;;;;;:24;;5799:5;5781:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5765:13:9;;;:9;:13;;;;;;;;;;;;:40;;;;5820:25;;;;;;;5765:13;;5820:25;;;;;;;;;;;;;5596:256;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\n\n/**\n * @title Enigma Token\n * @dev ERC20 Enigma Token (ENG)\n *\n * ENG Tokens are divisible by 1e8 (100,000,000) base\n * units referred to as 'Grains'.\n *\n * ENG are displayed using 8 decimal places of precision.\n *\n * 1 ENG is equivalent to:\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\n *\n * 150 million ENG (total supply) is equivalent to:\n *   15000000000000000 == 150000000 * 10**8 == 1e17\n *\n * All initial ENG Grains are assigned to the creator of\n * this contract.\n *\n */\ncontract EnigmaToken is ERC20, ERC20Detailed {\n\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\n\n    /**\n    * @dev EnigmaToken Constructor\n    * Runs only on initial contract creation.\n    */\n    constructor() public ERC20Detailed(\"Enigma\", \"ENG\", 8) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    /**\n    * @dev Transfer token for a specified address when not paused\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    /**\n    * @dev Transfer tokens from one address to another when not paused\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint256 the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        return super.transferFrom(_from, _to, _value);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        return super.approve(_spender, _value);\n    }\n\n    function allowance(address _owner, address _spender) public view returns (uint256) {\n        return super.allowance(_owner,_spender);\n    }\n\n}",
  "sourcePath": "/home/fredfortier/Code/Enigma/discovery/enigma-contract-internal/contracts/EnigmaToken.sol",
  "ast": {
    "absolutePath": "/home/fredfortier/Code/Enigma/discovery/enigma-contract-internal/contracts/EnigmaToken.sol",
    "exportedSymbols": {
      "EnigmaToken": [
        3087
      ]
    },
    "id": 3088,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2991,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 2992,
        "nodeType": "ImportDirective",
        "scope": 3088,
        "sourceUnit": 4335,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3088,
        "sourceUnit": 4393,
        "src": "88:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2994,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4334,
              "src": "684:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4334",
                "typeString": "contract ERC20"
              }
            },
            "id": 2995,
            "nodeType": "InheritanceSpecifier",
            "src": "684:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2996,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4392,
              "src": "691:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$4392",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2997,
            "nodeType": "InheritanceSpecifier",
            "src": "691:13:3"
          }
        ],
        "contractDependencies": [
          4334,
          4392,
          4461
        ],
        "contractKind": "contract",
        "documentation": "@title Enigma Token\n@dev ERC20 Enigma Token (ENG)\n * ENG Tokens are divisible by 1e8 (100,000,000) base\nunits referred to as 'Grains'.\n * ENG are displayed using 8 decimal places of precision.\n * 1 ENG is equivalent to:\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\n * 150 million ENG (total supply) is equivalent to:\n  15000000000000000 == 150000000 * 10**8 == 1e17\n * All initial ENG Grains are assigned to the creator of\nthis contract.\n ",
        "fullyImplemented": true,
        "id": 3087,
        "linearizedBaseContracts": [
          3087,
          4392,
          4334,
          4461
        ],
        "name": "EnigmaToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3004,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 3087,
            "src": "712:58:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2998,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_15000000000000000_by_1",
                "typeString": "int_const 15000000000000000"
              },
              "id": 3003,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "313530303030303030",
                "id": 2999,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "753:9:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_150000000_by_1",
                  "typeString": "int_const 150000000"
                },
                "value": "150000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "id": 3002,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 3000,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "765:2:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "38",
                  "id": 3001,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "769:1:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_8_by_1",
                    "typeString": "int_const 8"
                  },
                  "value": "8"
                },
                "src": "765:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                }
              },
              "src": "753:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15000000000000000_by_1",
                "typeString": "int_const 15000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3018,
              "nodeType": "Block",
              "src": "968:50:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3013,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4476,
                          "src": "984:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "984:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3015,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3004,
                        "src": "996:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3012,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4249,
                      "src": "978:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3017,
                  "nodeType": "ExpressionStatement",
                  "src": "978:33:3"
                }
              ]
            },
            "documentation": "@dev EnigmaToken Constructor\nRuns only on initial contract creation.",
            "id": 3019,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "456e69676d61",
                    "id": 3007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "948:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c",
                      "typeString": "literal_string \"Enigma\""
                    },
                    "value": "Enigma"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "454e47",
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "958:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f",
                      "typeString": "literal_string \"ENG\""
                    },
                    "value": "ENG"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "38",
                    "id": 3009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "965:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  }
                ],
                "id": 3010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3006,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4392,
                  "src": "934:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$4392_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "934:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:2:3"
            },
            "returnParameters": {
              "id": 3011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:0:3"
            },
            "scope": 3087,
            "src": "913:105:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3034,
              "nodeType": "Block",
              "src": "1269:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3030,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3021,
                        "src": "1301:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3031,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3023,
                        "src": "1306:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3028,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "1286:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3978,
                      "src": "1286:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3027,
                  "id": 3033,
                  "nodeType": "Return",
                  "src": "1279:34:3"
                }
              ]
            },
            "documentation": "@dev Transfer token for a specified address when not paused\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
            "id": 3035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3021,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "1218:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3023,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "1231:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1217:29:3"
            },
            "returnParameters": {
              "id": 3027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "1263:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1262:6:3"
            },
            "scope": 3087,
            "src": "1200:120:3",
            "stateMutability": "nonpayable",
            "superFunction": 3978,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3053,
              "nodeType": "Block",
              "src": "1708:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3048,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "1744:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3049,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3039,
                        "src": "1751:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3050,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3041,
                        "src": "1756:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3046,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "1725:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4063,
                      "src": "1725:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3045,
                  "id": 3052,
                  "nodeType": "Return",
                  "src": "1718:45:3"
                }
              ]
            },
            "documentation": "@dev Transfer tokens from one address to another when not paused\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred",
            "id": 3054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3037,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1642:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1657:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3041,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1670:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1641:44:3"
            },
            "returnParameters": {
              "id": 3045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3044,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1702:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3043,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1701:6:3"
            },
            "scope": 3087,
            "src": "1620:150:3",
            "stateMutability": "nonpayable",
            "superFunction": 4063,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3069,
              "nodeType": "Block",
              "src": "2099:55:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3065,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3056,
                        "src": "2130:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3066,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3058,
                        "src": "2140:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3063,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "2116:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4014,
                      "src": "2116:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3062,
                  "id": 3068,
                  "nodeType": "Return",
                  "src": "2109:38:3"
                }
              ]
            },
            "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
            "id": 3070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3056,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "2043:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3058,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "2061:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2042:34:3"
            },
            "returnParameters": {
              "id": 3062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3061,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "2093:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3060,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:6:3"
            },
            "scope": 3087,
            "src": "2026:128:3",
            "stateMutability": "nonpayable",
            "superFunction": 4014,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3085,
              "nodeType": "Block",
              "src": "2243:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3081,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3072,
                        "src": "2276:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3082,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3074,
                        "src": "2283:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3079,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "2260:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3959,
                      "src": "2260:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 3083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3078,
                  "id": 3084,
                  "nodeType": "Return",
                  "src": "2253:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 3086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3072,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "2179:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3074,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "2195:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2178:34:3"
            },
            "returnParameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3077,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "2234:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2233:9:3"
            },
            "scope": 3087,
            "src": "2160:139:3",
            "stateMutability": "view",
            "superFunction": 3959,
            "visibility": "public"
          }
        ],
        "scope": 3088,
        "src": "660:1642:3"
      }
    ],
    "src": "0:2302:3"
  },
  "legacyAST": {
    "absolutePath": "/home/fredfortier/Code/Enigma/discovery/enigma-contract-internal/contracts/EnigmaToken.sol",
    "exportedSymbols": {
      "EnigmaToken": [
        3087
      ]
    },
    "id": 3088,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2991,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 2992,
        "nodeType": "ImportDirective",
        "scope": 3088,
        "sourceUnit": 4335,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3088,
        "sourceUnit": 4393,
        "src": "88:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2994,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4334,
              "src": "684:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4334",
                "typeString": "contract ERC20"
              }
            },
            "id": 2995,
            "nodeType": "InheritanceSpecifier",
            "src": "684:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2996,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4392,
              "src": "691:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$4392",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2997,
            "nodeType": "InheritanceSpecifier",
            "src": "691:13:3"
          }
        ],
        "contractDependencies": [
          4334,
          4392,
          4461
        ],
        "contractKind": "contract",
        "documentation": "@title Enigma Token\n@dev ERC20 Enigma Token (ENG)\n * ENG Tokens are divisible by 1e8 (100,000,000) base\nunits referred to as 'Grains'.\n * ENG are displayed using 8 decimal places of precision.\n * 1 ENG is equivalent to:\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\n * 150 million ENG (total supply) is equivalent to:\n  15000000000000000 == 150000000 * 10**8 == 1e17\n * All initial ENG Grains are assigned to the creator of\nthis contract.\n ",
        "fullyImplemented": true,
        "id": 3087,
        "linearizedBaseContracts": [
          3087,
          4392,
          4334,
          4461
        ],
        "name": "EnigmaToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3004,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 3087,
            "src": "712:58:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2998,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "712:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_15000000000000000_by_1",
                "typeString": "int_const 15000000000000000"
              },
              "id": 3003,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "313530303030303030",
                "id": 2999,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "753:9:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_150000000_by_1",
                  "typeString": "int_const 150000000"
                },
                "value": "150000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "id": 3002,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 3000,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "765:2:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "38",
                  "id": 3001,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "769:1:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_8_by_1",
                    "typeString": "int_const 8"
                  },
                  "value": "8"
                },
                "src": "765:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                }
              },
              "src": "753:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15000000000000000_by_1",
                "typeString": "int_const 15000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3018,
              "nodeType": "Block",
              "src": "968:50:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3013,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4476,
                          "src": "984:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "984:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3015,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3004,
                        "src": "996:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3012,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4249,
                      "src": "978:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3017,
                  "nodeType": "ExpressionStatement",
                  "src": "978:33:3"
                }
              ]
            },
            "documentation": "@dev EnigmaToken Constructor\nRuns only on initial contract creation.",
            "id": 3019,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "456e69676d61",
                    "id": 3007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "948:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c",
                      "typeString": "literal_string \"Enigma\""
                    },
                    "value": "Enigma"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "454e47",
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "958:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f",
                      "typeString": "literal_string \"ENG\""
                    },
                    "value": "ENG"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "38",
                    "id": 3009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "965:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  }
                ],
                "id": 3010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3006,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4392,
                  "src": "934:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$4392_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "934:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:2:3"
            },
            "returnParameters": {
              "id": 3011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:0:3"
            },
            "scope": 3087,
            "src": "913:105:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3034,
              "nodeType": "Block",
              "src": "1269:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3030,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3021,
                        "src": "1301:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3031,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3023,
                        "src": "1306:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3028,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "1286:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3978,
                      "src": "1286:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3027,
                  "id": 3033,
                  "nodeType": "Return",
                  "src": "1279:34:3"
                }
              ]
            },
            "documentation": "@dev Transfer token for a specified address when not paused\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
            "id": 3035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3021,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "1218:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3023,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "1231:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1217:29:3"
            },
            "returnParameters": {
              "id": 3027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "1263:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1262:6:3"
            },
            "scope": 3087,
            "src": "1200:120:3",
            "stateMutability": "nonpayable",
            "superFunction": 3978,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3053,
              "nodeType": "Block",
              "src": "1708:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3048,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "1744:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3049,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3039,
                        "src": "1751:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3050,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3041,
                        "src": "1756:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3046,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "1725:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4063,
                      "src": "1725:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3045,
                  "id": 3052,
                  "nodeType": "Return",
                  "src": "1718:45:3"
                }
              ]
            },
            "documentation": "@dev Transfer tokens from one address to another when not paused\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred",
            "id": 3054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3037,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1642:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1657:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3041,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1670:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1641:44:3"
            },
            "returnParameters": {
              "id": 3045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3044,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3054,
                  "src": "1702:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3043,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1701:6:3"
            },
            "scope": 3087,
            "src": "1620:150:3",
            "stateMutability": "nonpayable",
            "superFunction": 4063,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3069,
              "nodeType": "Block",
              "src": "2099:55:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3065,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3056,
                        "src": "2130:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3066,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3058,
                        "src": "2140:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3063,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "2116:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4014,
                      "src": "2116:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3062,
                  "id": 3068,
                  "nodeType": "Return",
                  "src": "2109:38:3"
                }
              ]
            },
            "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
            "id": 3070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3056,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "2043:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3058,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "2061:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2042:34:3"
            },
            "returnParameters": {
              "id": 3062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3061,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "2093:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3060,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:6:3"
            },
            "scope": 3087,
            "src": "2026:128:3",
            "stateMutability": "nonpayable",
            "superFunction": 4014,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3085,
              "nodeType": "Block",
              "src": "2243:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3081,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3072,
                        "src": "2276:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3082,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3074,
                        "src": "2283:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3079,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4510,
                        "src": "2260:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EnigmaToken_$3087",
                          "typeString": "contract super EnigmaToken"
                        }
                      },
                      "id": 3080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3959,
                      "src": "2260:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 3083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3078,
                  "id": 3084,
                  "nodeType": "Return",
                  "src": "2253:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 3086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3072,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "2179:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3074,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "2195:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2178:34:3"
            },
            "returnParameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3077,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3086,
                  "src": "2234:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2233:9:3"
            },
            "scope": 3087,
            "src": "2160:139:3",
            "stateMutability": "view",
            "superFunction": 3959,
            "visibility": "public"
          }
        ],
        "scope": 3088,
        "src": "660:1642:3"
      }
    ],
    "src": "0:2302:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x27C7Bd51f3Faaf5acEB51520A975D2571f234257",
      "transactionHash": "0xb7f8e65804356c54c6d0a470ea69765494d3207c4c836848d49bc06b48ea229f"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-21T23:21:42.646Z",
  "devdoc": {
    "details": "ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as 'Grains'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "constructor": {
        "details": "EnigmaToken Constructor Runs only on initial contract creation."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address when not paused",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another when not paused",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Enigma Token"
  },
  "userdoc": {
    "methods": {}
  }
}