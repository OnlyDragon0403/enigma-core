
enclave {
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_backtrace.edl" import *;
    from "sgx_tstdc.edl" import *;
    from "sgx_fs.edl" import *;

    /* data structures */
    include "sgx_key_exchange.h"
    include "enigma-types.h"

    trusted {

        public sgx_status_t ecall_get_registration_quote([in] const sgx_target_info_t * target_info ,[out]  sgx_report_t * report);

        public void ecall_run_tests();

        public void ecall_get_signing_address([out] uint8_t arr[42]);

        public EnclaveReturn ecall_set_worker_params([in, size=worker_params_rlp_len] const uint8_t* worker_params_rlp, size_t worker_params_rlp_len,
                                        [out, size=32] uint8_t* rand_out, [out, size=32] uint8_t* nonce_out,
                                        [out, size=65] uint8_t* sig_out);

        public EnclaveReturn ecall_get_enc_state_keys([in, size=msg_len] const uint8_t* msg, size_t msg_len,
                                        [in, size=65] uint8_t* sig,
                                        [out, size=100000] uint8_t* enc_response_out, [out] uint64_t* enc_response_len_out,
                                        [out, size=64] uint8_t* pubkey_out,
                                        [out, size=65] uint8_t* sig_out);
    };
    untrusted {
        void ocall_get_home( [out, size=4096] uint8_t* output, [out] uint32_t* result_length);

    };
};
