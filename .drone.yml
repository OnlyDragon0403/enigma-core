kind: pipeline
name: default
steps:
  - name: ganache
    image: trufflesuite/ganache-cli:v6.4.3
    detach: true

  - name: core
    image: enigmampc/enigma-core:0.0.8
    depends_on: [clone]
    privileged: true
    commands:
      - LD_LIBRARY_PATH=/opt/intel/libsgx-enclave-common/aesm /opt/intel/libsgx-enclave-common/aesm/aesm_service
      - . /opt/sgxsdk/environment && . /root/.cargo/env
      - cd enigma-core && RUSTFLAGS=-Awarnings make DEBUG=1
      - cd app && RUSTFLAGS=-Awarnings cargo test
    volumes:
      - name: isgx
        path: /dev/isgx

  - name: principal
    image: enigmampc/enigma-core:0.0.8
    depends_on: [clone]
    privileged: true
    commands:
      - LD_LIBRARY_PATH=/opt/intel/libsgx-enclave-common/aesm /opt/intel/libsgx-enclave-common/aesm/aesm_service
      - . /opt/sgxsdk/environment && . /root/.cargo/env
      - cd enigma-principal && RUSTFLAGS=-Awarnings make DEBUG=1
      - export NODE_URL="http://ganache:8545"
      - cd app && RUSTFLAGS=-Awarnings cargo test
    volumes:
      - name: isgx
        path: /dev/isgx

  - name: tools_u
    image: enigmampc/enigma-core:0.0.8
    depends_on: [clone]
    commands:
      - . /root/.cargo/env
      - export NODE_URL="http://ganache:8545"
      - cd enigma-tools-u
      - RUSTFLAGS=-Awarnings cargo test

  - name: enigma_crypto
    image: enigmampc/enigma-core:0.0.8
    depends_on: [clone]
    commands:
      - . /root/.cargo/env
      - cd enigma-crypto
      - RUSTFLAGS=-Awarnings cargo test
      - RUSTFLAGS=-Awarnings cargo build --no-default-features --features=sgx

  - name: tools_m
    image: enigmampc/enigma-core:0.0.8
    depends_on: [clone]
    commands:
      - . /root/.cargo/env
      - cd enigma-tools-m
      - RUSTFLAGS=-Awarnings cargo test
      - RUSTFLAGS=-Awarnings cargo build --no-default-features --features=sgx

  - name: enigma_types
    image: enigmampc/enigma-core:0.0.8
    depends_on: [clone]
    commands:
      - . /root/.cargo/env
      - cd enigma-types
      - RUSTFLAGS=-Awarnings cargo test
      - RUSTFLAGS=-Awarnings cargo build --no-default-features
      - RUSTFLAGS=-Awarnings cargo build --no-default-features --features=sgx
      - RUSTFLAGS=-Awarnings cargo build --no-default-features --features=alloc

  - name: integration
    image: enigmampc/docker-client
    depends_on:
      - core
      - principal
    commands:
      - git clone https://github.com/enigmampc/discovery-docker-network.git
      - |
        pushd discovery-docker-network/enigma-core &&
        docker build --build-arg GIT_BRANCH_CORE=$DRONE_BRANCH --build-arg SGX_MODE=HW -t enigmampc/enigma_core_hw:latest --no-cache . &&
        docker build -f Dockerfile.km --build-arg GIT_BRANCH_CORE=$DRONE_BRANCH --build-arg SGX_MODE=HW -t enigmampc/enigma_km_hw:latest --no-cache . &&
        popd
      - pushd discovery-docker-network && docker-compose -f docker-compose.yml -f docker-compose.hw.yml -f docker-compose.test.yml up --exit-code-from client && popd
    privileged: true
    volumes:
      - name: sock
        path: /var/run/docker.sock

  - name: deploy
    image: enigmampc/docker-client
    depends_on:
      - integration
    when:
      branch:
        - develop
    environment:
      USERNAME:
        from_secret: username
      PASSWORD:
        from_secret: password
    commands:
      - git clone https://github.com/enigmampc/discovery-docker-network.git
      - cd discovery-docker-network/enigma-core
      - sed -i "s/-vv/-v/" start_core.bash && sed -i "s/-vv/-v/" start_km.bash
      - echo $PASSWORD | docker login -u $USERNAME --password-stdin
      - docker build --build-arg GIT_BRANCH_CORE=$DRONE_BRANCH --build-arg SGX_MODE=HW -t enigmampc/enigma_core_hw:latest --no-cache .
      - docker push enigmampc/enigma_core_hw:latest
      - docker build -f Dockerfile.km --build-arg GIT_BRANCH_CORE=$DRONE_BRANCH --build-arg SGX_MODE=HW -t enigmampc/enigma_km_hw:latest --no-cache .
      - docker push enigmampc/enigma_km_hw:latest
      - docker build --build-arg GIT_BRANCH_CORE=$DRONE_BRANCH --build-arg SGX_MODE=SW -t enigmampc/enigma_core_sw:latest --no-cache .
      - docker push enigmampc/enigma_core_sw:latest
      - docker build -f Dockerfile.km --build-arg GIT_BRANCH_CORE=$DRONE_BRANCH --build-arg SGX_MODE=SW -t enigmampc/enigma_km_sw:latest --no-cache .
      - docker push enigmampc/enigma_km_sw:latest
    privileged: true
    volumes:
      - name: sock
        path: /var/run/docker.sock

volumes:
  - name: isgx
    host:
      path: /dev/isgx
  - name: sock
    host:
      path: /var/run/docker.sock
